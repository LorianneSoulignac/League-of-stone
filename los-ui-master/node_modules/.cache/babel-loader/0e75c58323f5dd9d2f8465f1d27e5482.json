{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AdminEtu\\\\Desktop\\\\dossierinfol3\\\\dossierweb\\\\League-of-stone\\\\League-of-stone\\\\los-ui-master\\\\src\\\\board\\\\Board.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../card/Card\";\nimport Axios from \"axios\";\nimport { SERVER_URL } from \"../consts\";\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      errsor: null,\n      isLoaded: false,\n      champions: []\n    };\n    return _this;\n  } // randomPick(champs) {\n  // \tlet iChamps = [];\n  // \tfor (let i = 0; i < 120 ; i++) {\n  // \t\t\tconsole.log()\n  // \t\tiChamps.push({\"id\": this.state.champions.key, \"name\": this.state.name, \"img\":  this.state.key + \"_0.jpg\" \n  // \t\t ,\"momo\" : this.state.champions[i] });\n  // \t\t\tconsole.log(iChamps[i]);\n  // \t\t}\n  // \t\treturn iChamps;\n  // }\n  // , \"attack\":elem.info.attack , \"defense\":elem.defense  pour le randompick\n\n\n  _createClass(Board, [{\n    key: \"recupererinfoenanglais\",\n    value: function recupererinfoenanglais(champs) {\n      var iChamps = [];\n\n      for (var i = 0; i < 120; i++) {\n        iChamps.push({\n          \"id\": this.state.champions[i].key,\n          \"name\": this.state.champions[i].name,\n          \"img\": this.state.champions[i].key + \"_0.jpg\",\n          \"attack\": this.state.champions[i].info.attack,\n          \"defense\": this.state.champions[i].info.defense\n        });\n      }\n\n      return iChamps;\n    }\n  }, {\n    key: \"deckcards\",\n    value: function deckcards(champs) {\n      console.log(\"bonjour\");\n      var cards = [];\n\n      for (var i = 0; i < 20; i++) {\n        cards.push(React.createElement(Card, {\n          id: this.state.champs[i].id,\n          name: this.state.champs[i].name,\n          img: this.state.champs[i].img,\n          attack: this.state.champs[i].attack,\n          defense: this.state.champs[i].defense,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      }\n\n      return cards;\n    } // componentDidMount() {\n    // \t// fetch(\"champion.json\")\n    // \t// \t.then(res => res.json())\n    // \tAxios\n    // \t\t.get(SERVER_URL + \"/cards/getAll\")\n    // \t\t.then(\n    // \t\t\t(result) => {\n    // \t\t\t\tconsole.log(result)\n    // \t\t\t\tif(result.data.status=== \"ok\"){\n    // \t\t\t\t\tconsole.log(result)\n    // \t\t\t\tlet champions = this.randomPick(result);\n    // \t\t\t\tthis.setState({\n    // \t\t\t\t\tisLoaded: true,\n    // \t\t\t\t\tchampions: champions\n    // \t\t\t\t});\n    // \t\t\t}},\n    // \t\t\t(error) => {\n    // \t\t\t\tthis.setState({\n    // \t\t\t\t\tisLoaded: true,\n    // \t\t\t\t\terror\n    // \t\t\t\t});\n    // \t\t\t}\n    // \t\t\t);\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Axios.get(SERVER_URL + \"/cards/getAll\").then(function (result) {\n        if (result.data.status === \"ok\") {\n          _this2.setState({\n            champions: result.data.data\n          });\n\n          var var1 = _this2.recupererinfoenanglais(_this2.state.champions);\n\n          console.log(var1);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$champions = this.state.champions,\n          error = _this$state$champions.error,\n          isLoaded = _this$state$champions.isLoaded,\n          var1 = _this$state$champions.var1;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        var cards = this.deckcards(var1);\n        return React.createElement(\"section\", {\n          className: \"row\",\n          classID: \"board\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, cards);\n      }\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\AdminEtu\\Desktop\\dossierinfol3\\dossierweb\\League-of-stone\\League-of-stone\\los-ui-master\\src\\board\\Board.js"],"names":["React","Component","Card","Axios","SERVER_URL","Board","props","state","errsor","isLoaded","champions","champs","iChamps","i","push","key","name","info","attack","defense","console","log","cards","id","img","get","then","result","data","status","setState","var1","recupererinfoenanglais","error","message","deckcards"],"mappings":"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","sourcesContent":["\r\nimport React, {Component} from \"react\";\r\n\r\nimport Card from \"../card/Card\";\r\nimport Axios from \"axios\";\r\nimport { SERVER_URL } from \"../consts\";\r\n\r\nclass Board extends Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terrsor: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tchampions: [],\r\n\t\t\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// randomPick(champs) {\r\n\t// \tlet iChamps = [];\r\n\t// \tfor (let i = 0; i < 120 ; i++) {\r\n\t\t\t\r\n\t// \t\t\tconsole.log()\r\n\t// \t\tiChamps.push({\"id\": this.state.champions.key, \"name\": this.state.name, \"img\":  this.state.key + \"_0.jpg\" \r\n\t// \t\t ,\"momo\" : this.state.champions[i] });\r\n\t// \t\t\tconsole.log(iChamps[i]);\r\n\t// \t\t}\r\n\t// \t\treturn iChamps;\r\n\t// }\r\n\t// , \"attack\":elem.info.attack , \"defense\":elem.defense  pour le randompick\r\n\t\t\r\n\t\r\n\trecupererinfoenanglais(champs) {\r\n\t\tlet iChamps = [];\r\n\t\tfor (let i = 0; i < 120 ; i++) {\t\r\n\t\t\tiChamps.push({ \"id\" : this.state.champions[i].key,\"name\": this.state.champions[i].name, \"img\":  this.state.champions[i].key + \"_0.jpg\" ,\"attack\": this.state.champions[i].info.attack,\"defense\": this.state.champions[i].info.defense});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\treturn iChamps;\r\n\r\n\t\t\r\n\t}\r\n\r\n\tdeckcards(champs) {\r\n\t\tconsole.log(\"bonjour\")\r\n\r\n\t\tlet cards = [];\r\n\t\tfor (let i = 0; i < 20; i++) {\r\n\t\t\tcards.push(\r\n\t\t\t\t<Card id={this.state.champs[i].id}\r\n\t\t\t\t\t  name={this.state.champs[i].name}\r\n\t\t\t\t\t  img={this.state.champs[i].img}\r\n\t\t\t\t\t  attack={this.state.champs[i].attack}\r\n\t\t\t\t\t  defense={this.state.champs[i].defense}\r\n\t\t\t\t\t  key={i}\r\n\t\t\t\t\t  />);\r\n\r\n\t\t\t\t\r\n\t\t}\r\n\t\treturn cards;\r\n\t}\r\n\r\n\t// componentDidMount() {\r\n\t// \t// fetch(\"champion.json\")\r\n\t// \t// \t.then(res => res.json())\r\n\t// \tAxios\r\n\t// \t\t.get(SERVER_URL + \"/cards/getAll\")\r\n\r\n\t\t\t\r\n\t// \t\t.then(\r\n\t// \t\t\t(result) => {\r\n\t// \t\t\t\tconsole.log(result)\r\n\t// \t\t\t\tif(result.data.status=== \"ok\"){\r\n\t// \t\t\t\t\tconsole.log(result)\r\n\t// \t\t\t\tlet champions = this.randomPick(result);\r\n\t\t\t\t\t\r\n\t// \t\t\t\tthis.setState({\r\n\t// \t\t\t\t\tisLoaded: true,\r\n\t// \t\t\t\t\tchampions: champions\r\n\t// \t\t\t\t});\r\n\t// \t\t\t}},\r\n\t// \t\t\t(error) => {\r\n\t// \t\t\t\tthis.setState({\r\n\t// \t\t\t\t\tisLoaded: true,\r\n\t// \t\t\t\t\terror\r\n\t// \t\t\t\t});\r\n\t// \t\t\t}\r\n\t// \t\t\t);\r\n\r\n\t// }\r\n\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\t\r\n\t\tAxios\r\n\t\t\t.get(SERVER_URL + \"/cards/getAll\")\r\n\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(result.data.status=== \"ok\"){\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tchampions :result.data.data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet var1 = this.recupererinfoenanglais(this.state.champions);\r\n\t\t\t\t\t\tconsole.log(var1)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t}},\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst {error, isLoaded, var1} = this.state.champions;\r\n\r\n\t\tif (error) {\r\n\t\t\treturn <div>Error: {error.message}</div>;\r\n\t\t} else if (!isLoaded) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\tlet cards = this.deckcards(var1);\r\n\t\t\treturn (\r\n\t\t\t\t<section className=\"row\" classID=\"board\">\r\n\t\t\t\t\t{cards}\r\n\t\t\t\t</section>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}